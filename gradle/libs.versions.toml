[versions]
# Project
applicationId = "ru.blays.ficbook.reader"
projectVersion = "1.0.9"
versionCode = "22"
versionNameSuffix = "-RC1"
kotlin = "2.0.10"
agp = "8.6.0-alpha07"
jvmTarget = "18"

# Android
android-minSdk = "26"
android-compileSdk = "34"
android-targetSdk = "34"

# Decompose
decompose = "3.2.0-alpha05"
essenty = "2.2.0-alpha04"
# Project Dependencies
jsoup = "1.18.1"
koin = "4.0.0-RC2"
kotlinx-coroutines = "1.9.0-RC.2"
kotlinx-serialization = "1.7.1"
ktxCore = "1.13.1"
workManager = "2.10.0-alpha02"
appcompat = "1.7.0"
materialKolor = "1.7.0"
multiplatform-settings = "1.2.0"
okhttp = "5.0.0-alpha.14"
realm = "2.1.0"
compose-jetbrains = "1.7.0-beta01"
androidx-activityCompose = "1.9.2"
composeColorPicker = "0.7.0"
browser = "1.8.0"
coil = "3.0.0-alpha10"
cache-fix = "3.0.1"
lwjgl = "3.3.4"
build-konfig = "0.15.1"
constraintLayout = "0.5.0-alpha03"
haze = "0.9.0-beta01"
rebugger = "1.0.0-rc03"
chucker = "4.0.0"
versions = "0.51.0"

[libraries]
androidx-activity-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-core = { module = "androidx.core:core", version.ref = "ktxCore" }
androidx-work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
compose-color-picker = { module = "com.godaddy.android.colorpicker:compose-color-picker", version.ref = "composeColorPicker" }
compose-color-picker-android = { module = "com.godaddy.android.colorpicker:compose-color-picker-android", version.ref = "composeColorPicker" }
compose-color-picker-jvm = { module = "com.godaddy.android.colorpicker:compose-color-picker-jvm", version.ref = "composeColorPicker" }
compose-constraintLayout = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version.ref = "constraintLayout" }
decompose-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensionsComposeJetbrains = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
realm-library-base = { module = "io.realm.kotlin:library-base", version.ref = "realm" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
rebugger = { group = "io.github.theapache64", name = "rebugger", version.ref = "rebugger" }
chucker-debug = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
chucker-noOp = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-jetbrains" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
realm-plugin = { id = "io.realm.kotlin", version.ref = "realm" }
gradle-cacheFix = { id = "org.gradle.android.cache-fix", version.ref = "cache-fix" }
build-konfig = { id = "com.codingfeline.buildkonfig", version.ref = "build-konfig" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }