[versions]
# Project
projectVersion = "1.0.5"
versionCode = "6"
kotlin = "1.9.20"
agp = "8.1.0"
jvmTarget = "18"

# Android
android-minSdk = "26"
android-compileSdk = "34"
android-targetSdk = "34"

# Decompose
decompose = "2.2.0-beta02"
essenty = "1.3.0"
# Project Dependencies
jsoup = "1.16.2"
kamelImage = "0.8.3"
koin = "3.5.0"
koinCompose = "1.1.0"
kotlinx-coroutines-core-jvm = "1.7.3"
kotlinx-serialization-json = "1.6.1"
ktor = "2.3.6"
ktxCore = "1.12.0"
libres = "1.2.0"
materialKolor = "1.2.6"
multiplatform-settings = "1.1.1"
okhttp = "4.12.0"
realm = "1.12.0"
compose-jetbrains = "1.6.0-dev1291"
androidx-activityCompose = "1.8.1"
commons-text = "1.10.0"
composeColorPicker = "0.7.0"
composeColorPickerJvm = "0.7.0"
haze = "0.3.1"
insetsx = "0.1.0-alpha10"
browser = "1.7.0"

[libraries]
androidx-activity-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-core = { module = "androidx.core:core", version.ref = "ktxCore" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }
compose-color-picker = { module = "com.godaddy.android.colorpicker:compose-color-picker", version.ref = "composeColorPicker" }
compose-color-picker-android = { module = "com.godaddy.android.colorpicker:compose-color-picker-android", version.ref = "composeColorPickerJvm" }
compose-color-picker-jvm = { module = "com.godaddy.android.colorpicker:compose-color-picker-jvm", version.ref = "composeColorPickerJvm" }
decompose-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensionsComposeJetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinx-coroutines-core-jvm" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
libres-compose = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
libres-plugin = { module = "io.github.skeptick.libres:gradle-plugin", version.ref = "libres" }
materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
moriatsushi-insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insetsx" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
realm-library-base = { module = "io.realm.kotlin:library-base", version.ref = "realm" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
com-github-ben-manes-versions = "com.github.ben-manes.versions:0.49.0"
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-jetbrains" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
nl-littlerobots-version-catalog-update = "nl.littlerobots.version-catalog-update:0.8.1"
realm-plugin = { id = "io.realm.kotlin", version.ref = "realm" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }